" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
    " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
    " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
            set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

            " Be nice and check for multi_byte even if the config requires
            " multi_byte support most of the time
            if has("multi_byte")
                " Windows cmd.exe still uses cp850. If Windows ever moved to
                " Powershell as the primary terminal, this would be utf-8
                set termencoding=cp850
                " Let Vim use utf-8 internally, because many scripts require this
                set encoding=utf-8
                setglobal fileencoding=utf-8
                " Windows has traditionally used cp1252, so it's probably wise to
                " fallback into cp1252 instead of eg. iso-8859-15.
                " Newer Windows files might contain utf-8 or utf-16 LE so we might
                " want to try them first.
                set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
            endif
        endif
    " }

" }

" Plugins {
    call plug#begin('~/.vim/plugged')

    " In your .vimrc.before file
    " list only the plugin groups you will use
    if !exists('g:tim_plugin_groups')
        " Functional Classification:
        "   1. General Programing
        "     autocomplete, syntastic, commenter, tags,
        "     fuzzy search, version control, file tree,
        "     doc
        "
        "   2. UI
        "     colortheme, status line
        "
        "   3. Language(HTML, CSS, Vue, React, Javascript, Python)
        "     REPL, Debug, Grammar Beauty
        "
        "   4. Editing
        "     autopair, textobj, easymotion
        "
        "   5. Misc
        let g:tim_plugin_groups = [
          \'autocomplete', 'syntastic', 'commenter', 'tags', 'fuzzy search',
          \'version control', 'file tree', 'doc',
          \'UI',
          \'python', 'javascript', 'html', 'css', 'vue', 'react', 'json',
          \'autopair', 'textobj', 'easymotion',
          \'misc'
          \]
    endif

    " To override all the included plugins, add the following to your
    " vimrc.plugins.config file:
    "   let g:override_tim_plugins = 1
    if !exists("g:override_tim_plugins")
        " General Programing {
            if count(g:tim_plugin_groups, 'autocomplete')
                Plug 'neoclide/coc.nvim', {'branch': 'release'}
                Plug 'honza/vim-snippets'
            endif

            if count(g:tim_plugin_groups, 'commenter')
                Plug 'tpope/vim-commentary'
            endif
        " }

        " Syntastic {
          " ale {
            if count(g:tim_plugin_groups, 'syntastic')
              if count(g:tim_plugin_groups, 'ale')
                Plug 'w0rp/ale'
              endif
            endif
          "}
        "}

        " UI {
            if count(g:tim_plugin_groups, 'UI')
                if (g:tim_theme == 'molokai')
                    Plug 'tomasr/molokai'
                endif

                if g:tim_theme == 'solarized'
                    Plug 'altercation/vim-colors-solarized'
                endif
            endif
        " }

        " Editing {
            if count(g:tim_plugin_groups, 'autopair')
                Plug 'jiangmiao/auto-pairs'
                Plug 'luochen1990/rainbow'
            endif
        " }
    endif

    call plug#end()
" }

" Use plugins.config if available {
    if filereadable(expand("~/.tim-vim/vimrc.plugins.config"))
        source ~/.tim-vim/vimrc.plugins.config
    endif
" }
